// <auto-generated />
using System;
using HL7Processor.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HL7Processor.Infrastructure.Migrations
{
    [DbContext(typeof(HL7DbContext))]
    [Migration("20250718172716_AddTransformationTables")]
    partial class AddTransformationTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.HL7ArchivedMessageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArchivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("OriginalMessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OriginalTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ArchivedMessages");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.HL7FieldEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("SegmentId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("SegmentId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.HL7MessageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PatientId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProcessingStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.HL7SegmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("MessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Segments");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.ParserMetric", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ComponentCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DelimiterDetected")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("FieldCount")
                        .HasColumnType("int");

                    b.Property<long?>("MemoryUsedBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("MessageType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ParseTimeMs")
                        .HasColumnType("int");

                    b.Property<int?>("SegmentCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ParserMetrics");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.TransformationHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutputData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SourceMessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<int>("TransformationTimeMs")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RuleId");

                    b.HasIndex("SourceMessageId");

                    b.ToTable("TransformationHistories");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.TransformationRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RuleDefinition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceFormat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TargetFormat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TransformationRules");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.ValidationResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProcessingTimeMs")
                        .HasColumnType("int");

                    b.Property<string>("ValidationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidationLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("WarningCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("ValidationResults");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.HL7FieldEntity", b =>
                {
                    b.HasOne("HL7Processor.Infrastructure.Entities.HL7SegmentEntity", "Segment")
                        .WithMany("Fields")
                        .HasForeignKey("SegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.HL7SegmentEntity", b =>
                {
                    b.HasOne("HL7Processor.Infrastructure.Entities.HL7MessageEntity", "Message")
                        .WithMany("Segments")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.TransformationHistory", b =>
                {
                    b.HasOne("HL7Processor.Infrastructure.Entities.TransformationRule", "Rule")
                        .WithMany("TransformationHistories")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HL7Processor.Infrastructure.Entities.HL7MessageEntity", "SourceMessage")
                        .WithMany()
                        .HasForeignKey("SourceMessageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Rule");

                    b.Navigation("SourceMessage");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.ValidationResult", b =>
                {
                    b.HasOne("HL7Processor.Infrastructure.Entities.HL7MessageEntity", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Message");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.HL7MessageEntity", b =>
                {
                    b.Navigation("Segments");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.HL7SegmentEntity", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("HL7Processor.Infrastructure.Entities.TransformationRule", b =>
                {
                    b.Navigation("TransformationHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
