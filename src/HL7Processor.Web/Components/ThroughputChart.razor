@inject IJSRuntime JSRuntime
@inject IDashboardService DashboardService
@using System.Linq

<div>
    <canvas id="throughputChart" width="400" height="200"></canvas>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitializeChart();
        }
    }

    private async Task InitializeChart()
    {
        try
        {
            // Only render chart if we're in the browser (not during server-side rendering)
            var isPrerendering = !JSRuntime.GetType().Name.Contains("RemoteJSRuntime");
            if (isPrerendering) return;

            var points = await DashboardService.GetThroughputLastHourAsync();

            var labels = points.Select(p => p.Timestamp.ToString("HH:mm")).ToArray();
            var data = points.Select(p => p.Count).ToArray();

            var chartData = new
            {
                labels,
                datasets = new[]
                {
                    new
                    {
                        label = "Messages/5min",
                        data,
                        borderColor = "rgb(75, 192, 192)",
                        backgroundColor = "rgba(75, 192, 192, 0.2)",
                        tension = 0.1
                    }
                }
            };

            await JSRuntime.InvokeVoidAsync("initializeThroughputChart", chartData);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error initializing chart: {ex.Message}");
        }
    }
}