@page "/"
@using HL7Processor.Web.Services
@inject IDashboardService DashboardService
@inject IJSRuntime JSRuntime

<PageTitle>HL7 Processor Dashboard</PageTitle>

<div class="row g-4">
    <!-- Key Metrics Cards -->
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@dashboardData.TotalMessages</h4>
                        <p class="card-text">Total Messages</p>
                    </div>
                    <div class="align-self-center">
                        <i class="bi bi-envelope-fill fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@dashboardData.ProcessedToday</h4>
                        <p class="card-text">Processed Today</p>
                    </div>
                    <div class="align-self-center">
                        <i class="bi bi-check-circle-fill fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-3">
        <div class="card bg-warning text-dark">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@dashboardData.PendingMessages</h4>
                        <p class="card-text">Pending</p>
                    </div>
                    <div class="align-self-center">
                        <i class="bi bi-clock-fill fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-3">
        <div class="card bg-danger text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@dashboardData.ErrorsToday</h4>
                        <p class="card-text">Errors Today</p>
                    </div>
                    <div class="align-self-center">
                        <i class="bi bi-exclamation-triangle-fill fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row g-4 mt-2">
    <!-- Throughput Chart -->
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-graph-up me-2"></i>
                    Message Throughput (Last Hour)
                </h5>
            </div>
            <div class="card-body">
                <ThroughputChart />
            </div>
        </div>
    </div>
    
    <!-- Recent Activity -->
    <div class="col-lg-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-activity me-2"></i>
                    Recent Activity
                </h5>
            </div>
            <div class="card-body">
                @if (dashboardData.RecentMessages?.Any() == true)
                {
                    <div class="list-group list-group-flush">
                        @foreach (var message in dashboardData.RecentMessages.Take(5))
                        {
                            <div class="list-group-item border-0 px-0">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <small class="text-muted">@message.MessageType</small>
                                        <div class="fw-medium">@message.PatientId</div>
                                    </div>
                                    <div class="text-end">
                                        <span class="badge @GetStatusBadge(message.Status)">
                                            @message.Status
                                        </span>
                                        <br>
                                        <small class="text-muted">@message.Timestamp.ToString("HH:mm")</small>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted">No recent messages</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private DashboardData dashboardData = new();

    protected override async Task OnInitializedAsync()
    {
        dashboardData = await DashboardService.GetDashboardDataAsync();
    }

    private string GetStatusBadge(string status)
    {
        return status?.ToLower() switch
        {
            "processed" => "bg-success",
            "pending" => "bg-warning text-dark",
            "error" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}