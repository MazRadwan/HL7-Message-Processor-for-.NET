@inherits LayoutView
@using Microsoft.AspNetCore.Components.Authorization
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<div class="d-flex" id="wrapper">
    <!-- Sidebar -->
    <div class="bg-dark border-end" id="sidebar-wrapper">
        <div class="sidebar-heading bg-primary text-white p-3">
            <i class="bi bi-activity me-2"></i>
            <strong>HL7 Processor</strong>
        </div>
        <div class="list-group list-group-flush">
            <AuthorizeView>
                <Authorized>
                    <NavLink class="list-group-item list-group-item-action bg-dark text-light border-0 py-3" href="/" Match="NavLinkMatch.All">
                        <i class="bi bi-speedometer2 me-2"></i>
                        Dashboard
                    </NavLink>
                    <NavLink class="list-group-item list-group-item-action bg-dark text-light border-0 py-3" href="/messages">
                        <i class="bi bi-envelope me-2"></i>
                        Messages
                    </NavLink>
                    <NavLink class="list-group-item list-group-item-action bg-dark text-light border-0 py-3" href="/live-feed">
                        <i class="bi bi-broadcast me-2"></i>
                        Live Feed
                    </NavLink>
                    
                    <AuthorizeView Roles="Admin">
                        <Authorized>
                            <div class="border-top border-secondary mt-2 pt-2">
                                <NavLink class="list-group-item list-group-item-action bg-dark text-light border-0 py-3" href="/reports">
                                    <i class="bi bi-graph-up me-2"></i>
                                    Reports
                                </NavLink>
                                <NavLink class="list-group-item list-group-item-action bg-dark text-light border-0 py-3" href="/settings">
                                    <i class="bi bi-gear me-2"></i>
                                    Settings
                                </NavLink>
                                <NavLink class="list-group-item list-group-item-action bg-dark text-light border-0 py-3" href="/users">
                                    <i class="bi bi-people me-2"></i>
                                    Users
                                </NavLink>
                            </div>
                        </Authorized>
                    </AuthorizeView>
                </Authorized>
            </AuthorizeView>
        </div>
    </div>

    <!-- Page Content -->
    <div id="page-content-wrapper" class="w-100">
        <!-- Top Navigation -->
        <nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
            <div class="container-fluid">
                <button class="btn btn-outline-secondary me-3" id="sidebarToggle" onclick="toggleSidebar()">
                    <i class="bi bi-list"></i>
                </button>

                <div class="d-flex align-items-center ms-auto">
                    <!-- System Health Indicator -->
                    <SystemHealthIndicator />
                    
                    <!-- User Menu -->
                    <AuthorizeView>
                        <Authorized>
                            <div class="dropdown ms-3">
                                <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                    <i class="bi bi-person-circle me-1"></i>
                                    @context.User.Identity?.Name
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" href="/profile">
                                        <i class="bi bi-person me-2"></i>Profile
                                    </a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <button class="dropdown-item" @onclick="HandleLogout">
                                            <i class="bi bi-box-arrow-right me-2"></i>Logout
                                        </button>
                                    </li>
                                </ul>
                            </div>
                        </Authorized>
                        <NotAuthorized>
                            <a href="/login" class="btn btn-primary">
                                <i class="bi bi-box-arrow-in-right me-1"></i>Login
                            </a>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <div class="container-fluid px-4 py-3">
            @Body
        </div>
    </div>
</div>

@inject IAuthenticationService AuthService

@code {
    private async Task HandleLogout()
    {
        try
        {
            // Call logout service
            await AuthService.LogoutAsync();
            
            // Clear local storage
            await JSRuntime.InvokeVoidAsync("localStorageHelper.remove", "authToken");
            await JSRuntime.InvokeVoidAsync("localStorageHelper.remove", "userInfo");
            
            // Redirect to login
            Navigation.NavigateTo("/login", true);
        }
        catch (Exception ex)
        {
            // Even if logout service fails, clear local storage and redirect
            await JSRuntime.InvokeVoidAsync("localStorageHelper.remove", "authToken");
            await JSRuntime.InvokeVoidAsync("localStorageHelper.remove", "userInfo");
            Navigation.NavigateTo("/login", true);
        }
    }
}

<script>
    function toggleSidebar() {
        document.getElementById('wrapper').classList.toggle('toggled');
    }

    // Auto-collapse sidebar on mobile
    window.addEventListener('resize', function() {
        if (window.innerWidth < 768) {
            document.getElementById('wrapper').classList.add('toggled');
        } else {
            document.getElementById('wrapper').classList.remove('toggled');
        }
    });

    // Initialize sidebar state based on screen size
    if (window.innerWidth < 768) {
        document.getElementById('wrapper').classList.add('toggled');
    }
</script>